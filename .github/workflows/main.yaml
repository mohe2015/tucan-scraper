permissions:
  id-token: write
  attestations: write
  pages: write

name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/.crates.toml
          ~/.cargo/.crates2.json
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions/checkout@v4
    - run: rustup install nightly-2024-09-10
    - run: rustup component add --toolchain nightly-2024-09-10 rustc-dev llvm-tools-preview
    - run: cargo +nightly-2024-09-10 install --git https://github.com/tucant/rustfmt --branch html-extractor-formatting rustfmt-nightly --force
    - run: cargo +nightly-2024-09-10 fmt --check

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/.crates.toml
          ~/.cargo/.crates2.json
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions/checkout@v4
    - run: rustup target add wasm32-unknown-unknown
    - run: cargo install -f wasm-bindgen-cli --version 0.2.97
    - run: cargo build --target=wasm32-unknown-unknown
      working-directory: tucan-injector
    - run: wasm-bindgen --out-dir=wasm-bindgen ../target/wasm32-unknown-unknown/debug/tucan_injector.wasm
      working-directory: tucan-injector
    - run: npm install
      working-directory: tucan-injector
    - run: npm run build
      working-directory: tucan-injector
    - uses: actions/upload-artifact@v4
      with:
        name: tucan-injector.js
        path: tucan-injector/dist/tucan-injector.js
    - uses: actions/attest-build-provenance@v1
      with:
        subject-path: tucan-injector/dist/tucan-injector.js
    - name: Upload static files as artifact
      id: deployment
      uses: actions/upload-pages-artifact@v3
      with:
        path: tucan-injector/dist/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
